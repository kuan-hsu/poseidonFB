module images.imageData;

import iup.iup;

import global, tools, images.xpm;

version(FBIDE)
{
	Ihandle* load_image_poseidonFBico()
	{
		ubyte[] imgdata = [
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 18, 17, 16, 112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 16, 16, 16, 32, 0, 0, 0, 16, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 46, 41, 255, 17, 16, 16, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 42, 46, 47, 128, 45, 53, 56, 239, 31, 31, 27, 112, 0, 0, 0, 0, 0, 0, 0, 0, 58, 58, 45, 239, 44, 33, 30, 239, 14, 12, 11, 48, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 15, 15, 16, 48, 111, 113, 108, 255, 92, 84, 65, 239, 4, 4, 4, 16, 0, 0, 0, 0, 39, 36, 28, 159, 92, 90, 74, 255, 38, 27, 24, 239, 16, 13, 13, 96, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 20, 20, 20, 80, 64, 62, 47, 159, 91, 82, 55, 207, 18, 18, 15, 16, 0, 0, 0, 0, 33, 33, 28, 96, 91, 92, 75, 255, 41, 36, 31, 255, 22, 16, 16, 159, 21, 18, 20, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 58, 44, 159, 84, 81, 65, 207, 31, 30, 26, 16, 0, 0, 0, 0, 24, 25, 21, 64, 82, 90, 81, 239, 60, 62, 54, 255, 39, 32, 26, 255, 16, 15, 16, 143, 14, 14, 15, 80, 0, 0, 0, 0, 0, 0, 0, 0,
		27, 27, 28, 96, 29, 33, 36, 128, 19, 22, 24, 96, 21, 21, 21, 32, 0, 0, 0, 0, 55, 59, 55, 159, 100, 101, 91, 239, 35, 33, 27, 48, 0, 0, 0, 0, 11, 12, 12, 32, 62, 66, 58, 191, 86, 95, 81, 255, 65, 75, 65, 255, 46, 50, 40, 255, 31, 28, 24, 255, 17, 17, 18, 80,
		11, 10, 11, 32, 54, 48, 50, 207, 66, 63, 60, 255, 64, 58, 46, 207, 0, 0, 0, 0, 16, 17, 18, 16, 76, 84, 84, 207, 100, 104, 90, 255, 39, 36, 29, 96, 0, 0, 0, 0, 0, 0, 0, 0, 43, 43, 37, 96, 96, 101, 90, 223, 101, 117, 118, 255, 39, 35, 36, 239, 15, 14, 15, 111,
		0, 0, 0, 0, 0, 0, 0, 16, 65, 56, 57, 175, 120, 107, 98, 255, 59, 52, 37, 159, 0, 0, 0, 0, 20, 22, 22, 16, 75, 85, 85, 207, 98, 106, 95, 255, 61, 57, 45, 159, 1, 1, 1, 16, 0, 0, 0, 0, 46, 50, 43, 191, 104, 119, 119, 255, 17, 12, 12, 223, 13, 13, 14, 96,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 77, 78, 175, 129, 120, 107, 255, 59, 54, 44, 143, 0, 0, 0, 0, 35, 37, 38, 64, 96, 107, 105, 239, 101, 113, 109, 255, 84, 81, 67, 207, 31, 34, 34, 112, 95, 106, 97, 255, 85, 92, 93, 255, 10, 8, 9, 223, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4, 4, 4, 16, 138, 131, 129, 239, 100, 97, 87, 255, 30, 27, 22, 64, 0, 0, 0, 0, 38, 39, 34, 80, 103, 113, 102, 255, 109, 125, 126, 255, 135, 145, 144, 255, 119, 129, 129, 255, 36, 33, 32, 223, 13, 12, 14, 127, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 62, 65, 128, 122, 117, 117, 255, 105, 100, 86, 239, 5, 5, 5, 16, 0, 0, 0, 0, 67, 68, 55, 159, 140, 146, 137, 255, 126, 127, 129, 255, 103, 101, 101, 255, 39, 32, 31, 255, 25, 25, 25, 64, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 15, 15, 16, 80, 121, 111, 110, 223, 82, 87, 84, 255, 85, 76, 61, 175, 33, 37, 32, 128, 121, 122, 96, 255, 148, 150, 137, 255, 132, 139, 140, 255, 127, 139, 140, 255, 95, 77, 66, 255, 38, 29, 25, 175, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 84, 78, 78, 144, 97, 97, 96, 255, 126, 135, 127, 255, 136, 146, 130, 255, 125, 128, 110, 239, 60, 53, 47, 255, 55, 48, 48, 239, 120, 117, 92, 255, 126, 124, 80, 255, 96, 74, 54, 255, 36, 23, 19, 159,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 46, 44, 48, 110, 102, 98, 255, 70, 74, 74, 239, 37, 33, 33, 255, 10, 8, 9, 191, 9, 8, 9, 159, 18, 18, 20, 96, 88, 82, 80, 239, 119, 113, 83, 255, 74, 64, 43, 255, 81, 58, 46, 239,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 36, 32, 33, 191, 19, 18, 19, 175, 19, 18, 19, 111, 13, 13, 15, 48, 0, 0, 0, 0, 0, 0, 0, 0, 19, 16, 17, 48, 100, 88, 84, 239, 46, 40, 35, 223, 8, 7, 6, 127];

		Ihandle* image = IupImageRGBA( 16, 16, imgdata.ptr );
		return image;
	}
}
version(DIDE)
{
	Ihandle* load_image_poseidonFBico()
	{
		ubyte[] imgdata = [
		0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 2, 0, 0, 4, 0, 0, 0, 0, 5, 2, 2, 24, 25, 8, 8, 107, 0, 0, 0, 0, 1, 0, 0, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 7, 2, 2, 35, 2, 1, 1, 28, 0, 0, 0, 0, 0, 0, 0, 0, 8, 3, 3, 17, 88, 25, 25, 233, 12, 4, 4, 73, 0, 0, 0, 0, 1, 0, 0, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 62, 19, 19, 127, 119, 34, 34, 254, 30, 6, 6, 100, 0, 0, 0, 0, 0, 0, 0, 11, 119, 35, 35, 229, 87, 21, 21, 246, 0, 0, 0, 52, 0, 0, 0, 0, 1, 0, 0, 5, 1, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 22, 12, 12, 54, 189, 88, 88, 255, 152, 61, 61, 238, 4, 2, 2, 28, 0, 0, 0, 0, 66, 20, 20, 149, 176, 59, 59, 255, 72, 17, 17, 240, 8, 2, 2, 95, 0, 1, 1, 0, 1, 0, 0, 2, 1, 0, 0, 2, 0, 0, 0, 3, 0, 0, 0, 1, 0, 0, 0, 0,
		2, 0, 0, 3, 0, 0, 0, 0, 16, 7, 7, 70, 104, 51, 51, 175, 136, 66, 66, 214, 4, 1, 1, 16, 0, 0, 0, 0, 51, 22, 22, 105, 171, 62, 62, 255, 88, 25, 25, 252, 23, 4, 4, 157, 7, 3, 3, 40, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 1,
		0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 102, 49, 49, 169, 146, 64, 64, 218, 7, 0, 0, 19, 0, 0, 0, 0, 32, 13, 13, 72, 155, 61, 61, 234, 141, 46, 46, 255, 66, 14, 14, 248, 25, 7, 7, 138, 4, 2, 2, 70, 1, 0, 0, 18, 1, 0, 0, 1,
		34, 10, 10, 101, 54, 16, 16, 143, 21, 6, 6, 101, 9, 2, 2, 36, 0, 0, 0, 0, 114, 45, 45, 169, 182, 78, 78, 248, 22, 8, 8, 57, 0, 0, 0, 0, 13, 6, 6, 38, 117, 50, 50, 185, 173, 66, 66, 255, 155, 46, 46, 252, 108, 29, 29, 253, 56, 16, 16, 237, 23, 7, 7, 93,
		8, 3, 3, 51, 95, 26, 26, 209, 159, 49, 49, 255, 102, 37, 37, 199, 0, 0, 0, 0, 0, 0, 0, 13, 152, 65, 65, 203, 201, 80, 80, 255, 45, 18, 18, 102, 0, 0, 0, 0, 0, 0, 0, 6, 47, 23, 23, 94, 166, 71, 71, 215, 238, 79, 79, 255, 85, 22, 22, 241, 10, 3, 3, 117,
		0, 0, 0, 0, 0, 0, 0, 14, 101, 37, 37, 167, 199, 86, 86, 255, 80, 31, 31, 153, 0, 0, 0, 0, 2, 0, 0, 17, 154, 59, 59, 204, 215, 81, 81, 255, 89, 37, 37, 158, 2, 2, 2, 14, 0, 0, 0, 0, 94, 29, 29, 182, 224, 82, 82, 255, 42, 13, 13, 228, 7, 2, 2, 89,
		1, 0, 0, 2, 2, 1, 1, 2, 0, 0, 0, 0, 115, 60, 60, 167, 203, 105, 105, 255, 76, 31, 31, 142, 0, 0, 0, 0, 31, 15, 15, 62, 192, 73, 73, 241, 235, 79, 79, 255, 132, 52, 52, 190, 46, 14, 14, 118, 210, 78, 78, 255, 176, 65, 65, 255, 9, 2, 2, 208, 6, 2, 2, 16,
		0, 0, 0, 0, 1, 0, 0, 3, 0, 0, 0, 0, 6, 4, 4, 23, 169, 105, 105, 232, 178, 82, 82, 255, 35, 14, 14, 73, 0, 0, 0, 0, 43, 21, 21, 89, 207, 73, 73, 255, 232, 93, 93, 254, 227, 120, 120, 253, 225, 100, 100, 255, 69, 24, 24, 238, 12, 3, 3, 116, 3, 1, 1, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 3, 2, 2, 4, 0, 0, 0, 0, 83, 54, 54, 128, 197, 103, 103, 255, 154, 60, 60, 227, 9, 5, 5, 26, 0, 0, 0, 0, 99, 46, 46, 168, 239, 129, 129, 255, 235, 108, 108, 248, 172, 78, 78, 254, 55, 17, 17, 255, 29, 12, 12, 63, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 2, 0, 0, 0, 0, 19, 3, 3, 66, 152, 77, 77, 232, 189, 73, 73, 255, 112, 49, 49, 166, 45, 11, 11, 120, 197, 109, 109, 247, 236, 127, 127, 255, 220, 106, 106, 253, 220, 113, 113, 251, 170, 55, 55, 255, 49, 9, 9, 167, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 2, 2, 4, 0, 0, 0, 0, 87, 54, 54, 138, 183, 83, 83, 255, 233, 111, 111, 250, 231, 125, 125, 255, 203, 115, 115, 246, 83, 38, 38, 240, 108, 41, 41, 236, 224, 91, 91, 255, 228, 87, 87, 253, 172, 52, 52, 255, 56, 10, 10, 164,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 3, 0, 0, 0, 0, 37, 24, 24, 54, 153, 81, 81, 255, 119, 52, 52, 244, 72, 33, 33, 250, 15, 0, 0, 205, 5, 1, 1, 141, 17, 3, 3, 84, 150, 57, 57, 230, 215, 89, 89, 255, 123, 47, 47, 235, 124, 27, 27, 247,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 4, 2, 2, 14, 61, 22, 22, 183, 24, 3, 3, 183, 15, 2, 2, 126, 12, 4, 4, 55, 5, 2, 2, 3, 0, 0, 0, 0, 13, 3, 3, 57, 171, 69, 69, 253, 74, 30, 30, 178, 8, 0, 0, 103];

		Ihandle* image = IupImageRGBA( 16, 16, imgdata.ptr );
		return image;
	}
}

Ihandle* load_image_scroll()
{
  ubyte[] imgdata = [
    0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0,
    0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0,
    0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0,
    0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 222,222,222,255, 222,222,222,255, 191,190,191,255, 191,190,191,255, 191,190,191,255, 191,190,191,255, 191,190,191,255, 191,190,191,255, 222,222,222,255, 222,222,222,255, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0,
    0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 222,222,222,255, 191,190,191,255, 191,190,191,255, 191,190,191,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 191,190,191,255, 191,190,191,255, 191,190,191,255, 222,222,222,255, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0,
    0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 245,246,245,255, 191,190,191,255, 191,190,191,255, 222,222,222,255, 222,222,222,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 191,190,191,255, 191,190,191,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 222,222,222,255, 191,190,191,255, 165,165,165,255, 191,190,191,255, 245,246,245,255, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0,
    0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 245,246,245,255, 191,190,191,255, 191,190,191,255, 222,222,222,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 191,190,191,255, 83,82,83,255, 83,82,83,255, 191,190,191,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 222,222,222,255, 222,222,222,255, 191,190,191,255, 191,190,191,255, 245,246,245,255, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0,
    0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 245,246,245,255, 191,190,191,255, 191,190,191,255, 222,222,222,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 191,190,191,255, 83,82,83,255, 83,82,83,255, 83,82,83,255, 83,82,83,255, 191,190,191,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 222,222,222,255, 222,222,222,255, 191,190,191,255, 191,190,191,255, 245,246,245,255, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0,
    0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 191,190,191,255, 191,190,191,255, 222,222,222,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 222,222,222,255, 83,82,83,255, 83,82,83,255, 83,82,83,255, 83,82,83,255, 83,82,83,255, 83,82,83,255, 222,222,222,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 222,222,222,255, 222,222,222,255, 191,190,191,255, 191,190,191,255, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0,
    0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 222,222,222,255, 165,165,165,255, 222,222,222,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 165,165,165,255, 222,222,222,255, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0,
    0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 191,190,191,255, 191,190,191,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 222,222,222,255, 222,222,222,255, 191,190,191,255, 191,190,191,255, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0,
    0,0,0,0, 0,0,0,0, 0,0,0,0, 222,222,222,255, 191,190,191,255, 222,222,222,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 165,165,165,255, 222,222,222,255, 0,0,0,0, 0,0,0,0, 0,0,0,0,
    0,0,0,0, 0,0,0,0, 0,0,0,0, 191,190,191,255, 191,190,191,255, 222,222,222,255, 245,246,245,255, 245,246,245,255, 222,222,222,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 191,190,191,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 191,190,191,255, 191,190,191,255, 0,0,0,0, 0,0,0,0, 0,0,0,0,
    0,0,0,0, 0,0,0,0, 245,246,245,255, 191,190,191,255, 191,190,191,255, 222,222,222,255, 245,246,245,255, 191,190,191,255, 83,82,83,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 165,165,165,255, 83,82,83,255, 83,82,83,255, 165,165,165,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 83,82,83,255, 191,190,191,255, 222,222,222,255, 222,222,222,255, 191,190,191,255, 191,190,191,255, 245,246,245,255, 0,0,0,0, 0,0,0,0,
    0,0,0,0, 0,0,0,0, 245,246,245,255, 165,165,165,255, 191,190,191,255, 222,222,222,255, 191,190,191,255, 83,82,83,255, 83,82,83,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 165,165,165,255, 83,82,83,255, 83,82,83,255, 83,82,83,255, 83,82,83,255, 165,165,165,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 222,222,222,255, 83,82,83,255, 49,48,49,255, 191,190,191,255, 222,222,222,255, 191,190,191,255, 165,165,165,255, 245,246,245,255, 0,0,0,0, 0,0,0,0,
    0,0,0,0, 0,0,0,0, 245,246,245,255, 165,165,165,255, 191,190,191,255, 191,190,191,255, 83,82,83,255, 83,82,83,255, 83,82,83,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 83,82,83,255, 83,82,83,255, 83,82,83,255, 83,82,83,255, 83,82,83,255, 83,82,83,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 222,222,222,255, 49,48,49,255, 49,48,49,255, 49,48,49,255, 165,165,165,255, 191,190,191,255, 165,165,165,255, 245,246,245,255, 0,0,0,0, 0,0,0,0,
    0,0,0,0, 0,0,0,0, 245,246,245,255, 165,165,165,255, 191,190,191,255, 191,190,191,255, 83,82,83,255, 83,82,83,255, 83,82,83,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 83,82,83,255, 83,82,83,255, 83,82,83,255, 49,48,49,255, 49,48,49,255, 83,82,83,255, 245,246,245,255, 245,246,245,255, 222,222,222,255, 222,222,222,255, 49,48,49,255, 22,19,20,255, 49,48,49,255, 165,165,165,255, 191,190,191,255, 165,165,165,255, 245,246,245,255, 0,0,0,0, 0,0,0,0,
    0,0,0,0, 0,0,0,0, 245,246,245,255, 165,165,165,255, 191,190,191,255, 222,222,222,255, 191,190,191,255, 83,82,83,255, 83,82,83,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 165,165,165,255, 49,48,49,255, 49,48,49,255, 49,48,49,255, 49,48,49,255, 165,165,165,255, 245,246,245,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 49,48,49,255, 49,48,49,255, 191,190,191,255, 222,222,222,255, 191,190,191,255, 165,165,165,255, 245,246,245,255, 0,0,0,0, 0,0,0,0,
    0,0,0,0, 0,0,0,0, 245,246,245,255, 165,165,165,255, 191,190,191,255, 222,222,222,255, 222,222,222,255, 191,190,191,255, 49,48,49,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 222,222,222,255, 165,165,165,255, 83,82,83,255, 83,82,83,255, 165,165,165,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 49,48,49,255, 191,190,191,255, 245,246,245,255, 222,222,222,255, 191,190,191,255, 165,165,165,255, 245,246,245,255, 0,0,0,0, 0,0,0,0,
    0,0,0,0, 0,0,0,0, 245,246,245,255, 191,190,191,255, 191,190,191,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 245,246,245,255, 222,222,222,255, 222,222,222,255, 191,190,191,255, 191,190,191,255, 245,246,245,255, 0,0,0,0, 0,0,0,0,
    0,0,0,0, 0,0,0,0, 245,246,245,255, 222,222,222,255, 165,165,165,255, 191,190,191,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 245,246,245,255, 245,246,245,255, 222,222,222,255, 222,222,222,255, 165,165,165,255, 222,222,222,255, 245,246,245,255, 0,0,0,0, 0,0,0,0,
    0,0,0,0, 0,0,0,0, 0,0,0,0, 245,246,245,255, 165,165,165,255, 191,190,191,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 245,246,245,255, 245,246,245,255, 222,222,222,255, 222,222,222,255, 191,190,191,255, 165,165,165,255, 245,246,245,255, 0,0,0,0, 0,0,0,0, 0,0,0,0,
    0,0,0,0, 0,0,0,0, 0,0,0,0, 245,246,245,255, 191,190,191,255, 165,165,165,255, 191,190,191,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 222,222,222,255, 222,222,222,255, 165,165,165,255, 191,190,191,255, 245,246,245,255, 0,0,0,0, 0,0,0,0, 0,0,0,0,
    0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 245,246,245,255, 165,165,165,255, 165,165,165,255, 191,190,191,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 191,190,191,255, 49,48,49,255, 49,48,49,255, 49,48,49,255, 49,48,49,255, 49,48,49,255, 49,48,49,255, 191,190,191,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 222,222,222,255, 222,222,222,255, 191,190,191,255, 191,190,191,255, 245,246,245,255, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0,
    0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 245,246,245,255, 222,222,222,255, 165,165,165,255, 191,190,191,255, 191,190,191,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 245,246,245,255, 191,190,191,255, 22,19,20,255, 22,19,20,255, 22,19,20,255, 49,48,49,255, 191,190,191,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 222,222,222,255, 222,222,222,255, 191,190,191,255, 165,165,165,255, 222,222,222,255, 245,246,245,255, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0,
    0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 245,246,245,255, 222,222,222,255, 165,165,165,255, 191,190,191,255, 191,190,191,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 245,246,245,255, 191,190,191,255, 49,48,49,255, 83,82,83,255, 191,190,191,255, 245,246,245,255, 245,246,245,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 191,190,191,255, 165,165,165,255, 222,222,222,255, 245,246,245,255, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0,
    0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 245,246,245,255, 222,222,222,255, 165,165,165,255, 165,165,165,255, 191,190,191,255, 191,190,191,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 191,190,191,255, 191,190,191,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 191,190,191,255, 165,165,165,255, 165,165,165,255, 222,222,222,255, 245,246,245,255, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0,
    0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 245,246,245,255, 222,222,222,255, 191,190,191,255, 165,165,165,255, 165,165,165,255, 191,190,191,255, 191,190,191,255, 191,190,191,255, 222,222,222,255, 222,222,222,255, 191,190,191,255, 191,190,191,255, 191,190,191,255, 165,165,165,255, 165,165,165,255, 191,190,191,255, 222,222,222,255, 245,246,245,255, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0,
    0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 245,246,245,255, 245,246,245,255, 222,222,222,255, 191,190,191,255, 165,165,165,255, 165,165,165,255, 165,165,165,255, 165,165,165,255, 165,165,165,255, 165,165,165,255, 165,165,165,255, 165,165,165,255, 191,190,191,255, 222,222,222,255, 245,246,245,255, 245,246,245,255, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0,
    0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 245,246,245,255, 245,246,245,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 222,222,222,255, 245,246,245,255, 245,246,245,255, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0,
    0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 245,246,245,255, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0,
    0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0, 0,0,0,0];

  Ihandle* image = IupImageRGBA(32, 32, imgdata.ptr);
  IupSetAttribute(image, "AUTOSCALE", "1");  

  return image;
}

version(Windows)
{
	Ihandle* create_image_warningbox( bool bInvert = false)
	{
	  ubyte[] imgdata = [
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 2, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 6, 6, 2, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 2, 0, 3, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 6, 6, 6, 0, 0, 2, 6, 6, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 6, 6, 2, 6, 6, 6, 6, 6, 6, 6, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 0, 6, 6, 6, 6, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 2, 0, 6, 6, 6, 6, 0, 2, 6, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 0, 0, 6, 6, 6, 6, 0, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 1, 0, 0, 6, 6, 6, 6, 0, 0, 2, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 2, 0, 0, 0, 6, 6, 6, 6, 0, 0, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 0, 0, 0, 0, 2, 6, 6, 6, 0, 0, 0, 2, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 6, 6, 6, 2, 0, 0, 0, 0, 6, 6, 6, 6, 0, 0, 0, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 2, 6, 6, 0, 0, 0, 0, 0, 1, 6, 6, 1, 0, 0, 0, 0, 7, 6, 6, 2, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 1, 6, 6, 2, 0, 0, 0, 0, 0, 0, 6, 6, 0, 0, 0, 0, 0, 0, 6, 6, 6, 1, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 6, 6, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 2, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 6, 6, 1, 0, 0, 0, 0,
		0, 0, 0, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 2, 0, 0, 0, 0,
		0, 0, 0, 2, 6, 6, 2, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 6, 0, 0, 0,
		0, 0, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 0, 0, 0,
		0, 0, 6, 6, 6, 2, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 6, 0, 0,
		0, 0, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 6, 0, 0,
		0, 0, 2, 6, 6, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 6, 6, 6, 0, 0,
		0, 0, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 0, 0,
		0, 0, 2, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 6, 5, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];

	  Ihandle* image = IupImage(32, 32, imgdata.ptr);

	  IupSetAttribute(image, "0", "BGCOLOR");
	  if( !bInvert ) IupSetAttribute(image, "1", "20 22 20"); else IupSetAttribute(image, "1", "235 233 235");
	  if( !bInvert ) IupSetAttribute(image, "2", "12 14 12"); else IupSetAttribute(image, "2", "243 241 243");
	  if( !bInvert ) IupSetAttribute(image, "3", "28 30 28"); else IupSetAttribute(image, "3", "227 225 227");
	  if( !bInvert ) IupSetAttribute(image, "4", "12 10 12"); else IupSetAttribute(image, "4", "243 245 243");
	  if( !bInvert ) IupSetAttribute(image, "5", "28 26 28"); else IupSetAttribute(image, "5", "227 229 227");
	  if( !bInvert ) IupSetAttribute(image, "6", "20 18 20"); else IupSetAttribute(image, "6", "235 237 235");
	  if( !bInvert ) IupSetAttribute(image, "7", "36 34 36"); else IupSetAttribute(image, "7", "219 221 219");

	  return image;
	}

	Ihandle* create_image_querybox( bool bInvert = false)
	{
	  ubyte[] imgdata = [
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 3, 1, 3, 3, 1, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 3, 3, 1, 2, 2, 1, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 1, 3, 3, 3, 0, 0, 0, 0, 3, 3, 3, 3, 3, 1, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 1, 3, 3, 1, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 1, 3, 3, 1, 0, 0, 0, 0,
		0, 0, 0, 0, 3, 3, 1, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 1, 3, 3, 0, 0, 0, 0, 0, 1, 3, 3, 0, 0, 0, 0,
		0, 0, 0, 3, 3, 3, 3, 0, 0, 0, 0, 0, 3, 3, 3, 0, 0, 3, 3, 3, 0, 0, 0, 0, 0, 3, 3, 3, 1, 0, 0, 0,
		0, 0, 0, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 0, 0, 0, 0, 0, 0, 3, 3, 1, 0, 0, 0,
		0, 0, 0, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 3, 1, 0, 0, 0, 0, 0, 0, 3, 3, 3, 0, 0, 0,
		0, 0, 0, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 1, 1, 0, 0, 0, 0, 0, 0, 1, 3, 3, 0, 0, 0,
		0, 0, 0, 3, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 2, 3, 3, 0, 0, 0,
		0, 0, 0, 3, 3, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 0, 0, 0,
		0, 0, 0, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 1, 0, 0, 0,
		0, 0, 0, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 0, 0, 0,
		0, 0, 0, 1, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 1, 0, 0, 0,
		0, 0, 0, 1, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 1, 0, 0, 0,
		0, 0, 0, 0, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 0, 0, 0, 0,
		0, 0, 0, 0, 1, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 1, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 3, 1, 3, 3, 1, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];

	  Ihandle* image = IupImage(32, 32, imgdata.ptr);

	  IupSetAttribute(image, "0", "BGCOLOR");
	  if( !bInvert ) IupSetAttribute(image, "1", "12 14 12"); else IupSetAttribute(image, "1", "243 241 243");
	  if( !bInvert ) IupSetAttribute(image, "2", "20 22 20"); else IupSetAttribute(image, "2", "235 233 235");
	  if( !bInvert ) IupSetAttribute(image, "3", "20 18 20"); else IupSetAttribute(image, "3", "235 237 235");
	  /*
	  IupSetAttribute(image, "4", "0 0 0");
	  IupSetAttribute(image, "5", "0 0 0");
	  IupSetAttribute(image, "6", "0 0 0");
	  IupSetAttribute(image, "7", "0 0 0");
	  */
	  return image;
	}

	Ihandle* create_image_errorbox( bool bInvert = false)
	{
	  ubyte[] imgdata = [
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 3, 1, 3, 3, 1, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 3, 3, 1, 2, 2, 1, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 1, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 1, 3, 3, 1, 0, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 0, 1, 3, 3, 1, 0, 0, 0, 0,
		0, 0, 0, 0, 3, 3, 1, 0, 0, 1, 3, 3, 3, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 1, 3, 3, 0, 0, 0, 0,
		0, 0, 0, 3, 3, 3, 3, 0, 0, 3, 3, 3, 3, 3, 0, 0, 0, 0, 3, 3, 3, 3, 3, 0, 0, 3, 3, 3, 1, 0, 0, 0,
		0, 0, 0, 3, 3, 3, 0, 0, 0, 0, 1, 3, 3, 3, 3, 0, 0, 3, 3, 3, 3, 3, 0, 0, 0, 0, 3, 3, 1, 0, 0, 0,
		0, 0, 0, 3, 3, 3, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 1, 3, 3, 3, 3, 0, 0, 0, 0, 0, 3, 3, 3, 0, 0, 0,
		0, 0, 0, 3, 3, 1, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0, 1, 3, 3, 0, 0, 0,
		0, 0, 0, 3, 3, 2, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 2, 3, 3, 0, 0, 0,
		0, 0, 0, 3, 3, 2, 0, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 0, 0, 0,
		0, 0, 0, 3, 3, 1, 0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0, 3, 3, 1, 0, 0, 0,
		0, 0, 0, 3, 3, 3, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 3, 3, 3, 0, 0, 0,
		0, 0, 0, 1, 3, 3, 0, 0, 0, 0, 3, 3, 3, 3, 3, 0, 0, 3, 3, 3, 3, 3, 0, 0, 0, 0, 3, 3, 1, 0, 0, 0,
		0, 0, 0, 1, 3, 3, 3, 0, 0, 3, 3, 3, 3, 3, 0, 0, 0, 0, 3, 3, 3, 3, 1, 0, 0, 3, 3, 3, 1, 0, 0, 0,
		0, 0, 0, 0, 3, 3, 1, 0, 0, 1, 3, 3, 3, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 3, 3, 3, 0, 0, 0, 0,
		0, 0, 0, 0, 1, 3, 3, 1, 0, 0, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 3, 1, 0, 0, 1, 3, 3, 1, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 1, 3, 3, 3, 1, 3, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 3, 1, 3, 3, 1, 3, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];

	  Ihandle* image = IupImage(32, 32, imgdata.ptr);

	  IupSetAttribute(image, "0", "BGCOLOR");
	  if( !bInvert ) IupSetAttribute(image, "1", "12 14 12"); else IupSetAttribute(image, "1", "243 241 243");
	  if( !bInvert ) IupSetAttribute(image, "2", "20 22 20"); else IupSetAttribute(image, "2", "235 233 235");;
	  if( !bInvert ) IupSetAttribute(image, "3", "20 18 20"); else IupSetAttribute(image, "3", "235 237 235");
	  /*
	  if( !bInvert ) IupSetAttribute(image, "4", "0 0 0"); else IupSetAttribute(image, "4", "0 0 0");
	  if( !bInvert ) IupSetAttribute(image, "5", "0 0 0"); else IupSetAttribute(image, "5", "0 0 0");
	  if( !bInvert ) IupSetAttribute(image, "6", "0 0 0"); else IupSetAttribute(image, "6", "0 0 0");
	  if( !bInvert ) IupSetAttribute(image, "7", "0 0 0"); else IupSetAttribute(image, "7", "0 0 0"); 
	  */
	  return image;
	}

	Ihandle* create_image_infobox( bool bInvert = false)
	{
	  ubyte[] imgdata = [
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 5, 2, 2, 2, 2, 2, 2, 2, 2, 5, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 3, 2, 2, 2, 2, 2, 7, 4, 7, 7, 2, 2, 2, 2, 2, 0, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 0, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 5, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 5, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 2, 2, 2, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 2, 2, 7, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 2, 2, 4, 1, 1, 1, 2, 2, 0, 1, 1, 0, 2, 2, 1, 1, 1, 7, 2, 2, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 2, 2, 6, 1, 1, 1, 0, 2, 2, 0, 0, 2, 2, 0, 1, 1, 1, 0, 2, 2, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 0, 2, 2, 2, 2, 0, 1, 1, 1, 1, 7, 2, 2, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 0, 2, 2, 0, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 5, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 5, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 7, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 0, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 0, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
		1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];

	  Ihandle* image = IupImage(32, 32, imgdata.ptr);

	  if( !bInvert ) IupSetAttribute(image, "0", "4 2 4"); else IupSetAttribute(image, "0", "251 253 251");
	  IupSetAttribute(image, "1", "BGCOLOR");
	  if( !bInvert ) IupSetAttribute(image, "2", "44 53 52"); else IupSetAttribute(image, "2", "211 202 203");
	  if( !bInvert ) IupSetAttribute(image, "3", "84 86 84"); else IupSetAttribute(image, "3", "171 169 171");
	  if( !bInvert ) IupSetAttribute(image, "4", "68 66 68"); else IupSetAttribute(image, "4", "187 189 187");
	  if( !bInvert ) IupSetAttribute(image, "5", "43 41 43"); else IupSetAttribute(image, "5", "212 214 212");
	  if( !bInvert ) IupSetAttribute(image, "6", "36 66 68"); else IupSetAttribute(image, "6", "219 189 187");
	  if( !bInvert ) IupSetAttribute(image, "7", "52 51 57"); else IupSetAttribute(image, "7", "203 204 198");

	  return image;
	}
}


void load_all_images_icons()
{
	XPM.init();

	version(FBIDE) IupSetHandle( "icon_bas", XPM.getIUPimageFormXPM( "icons/xpm/bas.xpm" ) ); else IupSetHandle( "icon_bas", XPM.getIUPimageFormXPM( "icons/xpm/d.xpm" ) );
	IupSetHandle( "icon_txt", XPM.getIUPimageFormXPM( "icons/xpm/txt.xpm" ) );
	IupSetHandle( "icon_bi", XPM.getIUPimageFormXPM( "icons/xpm/bi.xpm" ) );
	IupSetHandle( "icon_importprj", XPM.getIUPimageFormXPM( "icons/xpm/fbedit.xpm" ) );
	IupSetHandle( "icon_colormark", XPM.getIUPimageFormXPM( "icons/xpm/colormark.xpm" ) );

	XPM.createIUPimageHandle( "icons/xpm/prjexplorer.xpm", "icon_packageexplorer", true );
	XPM.createIUPimageHandle( "icons/xpm/down.xpm", "icon_downarrow", true );
	XPM.createIUPimageHandle( "icons/xpm/outline.xpm", "icon_outline", true );
	XPM.createIUPimageHandle( "icons/xpm/openprj.xpm", "icon_openprj" );
	XPM.createIUPimageHandle( "icons/xpm/up.xpm", "icon_uparrow" );
	XPM.createIUPimageHandle( "icons/xpm/saveas.xpm", "icon_saveas" );
	XPM.createIUPimageHandle( "icons/xpm/savetabs.xpm", "icon_savetabs" );
	XPM.createIUPimageHandle( "icons/xpm/manual.xpm", "icon_fbmanual" );
	XPM.createIUPimageHandle( "icons/xpm/goto.xpm", "icon_goto" );
	XPM.createIUPimageHandle( "icons/xpm/goto_member.xpm", "icon_gotomember" );
	XPM.createIUPimageHandle( "icons/xpm/remove.xpm", "icon_delete" );
	XPM.createIUPimageHandle( "icons/xpm/write.xpm", "icon_Write" );
	XPM.createIUPimageHandle( "icons/xpm/search.xpm", "icon_search", true );
	XPM.createIUPimageHandle( "icons/xpm/message.xpm", "icon_message", true );
	XPM.createIUPimageHandle( "icons/xpm/help.xpm", "icon_help" );
	XPM.createIUPimageHandle( "icons/xpm/removeothers.xpm", "icon_deleteothers" );
	XPM.createIUPimageHandle( "icons/xpm/removeright.xpm", "icon_deleteright" );
	XPM.createIUPimageHandle( "icons/xpm/removeall.xpm", "icon_deleteall" );
	XPM.createIUPimageHandle( "icons/xpm/annotate.xpm", "icon_annotation" );
	XPM.createIUPimageHandle( "icons/xpm/annotatehide.xpm", "icon_annotation_hide" );
	XPM.createIUPimageHandle( "icons/xpm/annotate_removeall.xpm", "icon_annotation_remove" );
	XPM.createIUPimageHandle( "icons/xpm/tools.xpm", "icon_tools" );
	XPM.createIUPimageHandle( "icons/xpm/toolitem.xpm", "icon_toolitem" );
	XPM.createIUPimageHandle( "icons/xpm/properties.xpm", "icon_properties" );
	XPM.createIUPimageHandle( "icons/xpm/preference.xpm", "icon_preference" );
	XPM.createIUPimageHandle( "icons/xpm/information.xpm", "icon_information" );
	XPM.createIUPimageHandle( "icons/xpm/findnext.xpm", "icon_findnext" );
	XPM.createIUPimageHandle( "icons/xpm/findprev.xpm", "icon_findprev" );
	XPM.createIUPimageHandle( "icons/xpm/findfiles.xpm", "icon_findfiles" );
	XPM.createIUPimageHandle( "icons/xpm/door.xpm", "icon_door" );
	XPM.createIUPimageHandle( "icons/xpm/door_open.xpm", "icon_dooropen" );
	XPM.createIUPimageHandle( "icons/xpm/type.xpm", "icon_type" );
	XPM.createIUPimageHandle( "icons/xpm/comment.xpm", "icon_comment" );
	XPM.createIUPimageHandle( "icons/xpm/uncomment.xpm", "icon_uncomment" );
	XPM.createIUPimageHandle( "icons/xpm/custom_option.xpm", "icon_customoption" );
	XPM.createIUPimageHandle( "icons/xpm/fullscreen.xpm", "icon_fullscreen" );
	XPM.createIUPimageHandle( "icons/xpm/folder.xpm", "icon_folder", true );
	XPM.createIUPimageHandle( "icons/xpm/folder_open.xpm", "icon_folder_open", true );
	XPM.createIUPimageHandle( "icons/xpm/prjfolderopen.xpm", "icon_prj_open" );
	XPM.createIUPimageHandle( "icons/xpm/prjfolder.xpm", "icon_prj" );
	XPM.createIUPimageHandle( "icons/xpm/collapse.xpm", "icon_collapse" );
	XPM.createIUPimageHandle( "icons/xpm/collapse1.xpm", "icon_collapse1" );
	XPM.createIUPimageHandle( "icons/xpm/importall.xpm", "icon_importall" );
	XPM.createIUPimageHandle( "icons/xpm/manual.xpm", "icon_manual" );
	XPM.createIUPimageHandle( "icons/xpm/casesensitive.xpm", "icon_casesensitive", true );
	XPM.createIUPimageHandle( "icons/xpm/close.xpm", "icon_close" );
	XPM.createIUPimageHandle( "icons/xpm/selectall.xpm", "icon_selectall", true );

	
	XPM.createIUPimageHandle( "icons/xpm/newfile.xpm", "icon_newfile", true );
	XPM.createIUPimageHandle( "icons/xpm/openfile.xpm", "icon_openfile", true );
	XPM.createIUPimageHandle( "icons/xpm/save.xpm", "icon_save", true );
	XPM.createIUPimageHandle( "icons/xpm/saveall.xpm", "icon_saveall", true );
	XPM.createIUPimageHandle( "icons/xpm/undo.xpm", "icon_undo", true );
	XPM.createIUPimageHandle( "icons/xpm/redo.xpm", "icon_redo", true );
	XPM.createIUPimageHandle( "icons/xpm/clear.xpm", "icon_clear", true );
	
	XPM.createIUPimageHandle( "icons/xpm/cut.xpm", "icon_cut", true );
	XPM.createIUPimageHandle( "icons/xpm/copy.xpm", "icon_copy", true );
	XPM.createIUPimageHandle( "icons/xpm/paste.xpm", "icon_paste", true );
	
	XPM.createIUPimageHandle( "icons/xpm/debug/left.xpm", "icon_debug_left", true );
	XPM.createIUPimageHandle( "icons/xpm/debug/right.xpm", "icon_debug_right", true );
	
	XPM.createIUPimageHandle( "icons/xpm/mark_toggle.xpm", "icon_mark", true );
	XPM.createIUPimageHandle( "icons/xpm/mark_next.xpm", "icon_marknext", true );
	XPM.createIUPimageHandle( "icons/xpm/mark_prev.xpm", "icon_markprev", true );
	XPM.createIUPimageHandle( "icons/xpm/mark_clear.xpm", "icon_markclear", true );
	
	XPM.createIUPimageHandle( "icons/xpm/compile.xpm", "icon_compile", true );
	XPM.createIUPimageHandle( "icons/xpm/buildrun.xpm", "icon_buildrun", true );
	XPM.createIUPimageHandle( "icons/xpm/run.xpm", "icon_run", true );
	XPM.createIUPimageHandle( "icons/xpm/build.xpm", "icon_build", true );
	XPM.createIUPimageHandle( "icons/xpm/rebuild.xpm", "icon_rebuild", true );
	XPM.createIUPimageHandle( "icons/xpm/quickrun.xpm", "icon_quickrun", true );

	XPM.createIUPimageHandle( "icons/xpm/32.xpm", "icon_32", true );
	XPM.createIUPimageHandle( "icons/xpm/64.xpm", "icon_64", true );
	
	XPM.createIUPimageHandle( "icons/xpm/console.xpm", "icon_console", true );
	XPM.createIUPimageHandle( "icons/xpm/gui.xpm", "icon_gui", true );

	// projectPanel
	XPM.createIUPimageHandle( "icons/xpm/collapse2.xpm", "icon_collapse2", true );
	XPM.createIUPimageHandle( "icons/xpm/shift_l_edit.xpm", "icon_shift_l", true );

	// outlinePanel
	XPM.createIUPimageHandle( "icons/xpm/show_pr.xpm", "icon_show_pr", true );
	XPM.createIUPimageHandle( "icons/xpm/show_p.xpm", "icon_show_p", true );
	XPM.createIUPimageHandle( "icons/xpm/show_r.xpm", "icon_show_r", true );
	XPM.createIUPimageHandle( "icons/xpm/show_nopr.xpm", "icon_show_nopr", true );
	XPM.createIUPimageHandle( "icons/xpm/wholeword.xpm", "icon_wholeword", true );
	XPM.createIUPimageHandle( "icons/xpm/notwholeword.xpm", "icon_notwholeword", true );
	XPM.createIUPimageHandle( "icons/xpm/show_linenum.xpm", "icon_show_linenum", true );
	XPM.createIUPimageHandle( "icons/xpm/refresh.xpm", "icon_refresh", true );

	
	// Color icon 
	IupSetHandle( "IUP_function", XPM.getIUPimageFormXPM( "icons/xpm/outline/fun_public.xpm" ) );
	IupSetHandle( "IUP_sub", XPM.getIUPimageFormXPM( "icons/xpm/outline/sub_public.xpm" ) );
	IupSetHandle( "IUP_function_protected", XPM.getIUPimageFormXPM( "icons/xpm/outline/fun_protected.xpm" ) );
	IupSetHandle( "IUP_function_private", XPM.getIUPimageFormXPM( "icons/xpm/outline/fun_private.xpm" ) );
	IupSetHandle( "IUP_sub_protected", XPM.getIUPimageFormXPM( "icons/xpm/outline/sub_protected.xpm" ) );
	IupSetHandle( "IUP_sub_private", XPM.getIUPimageFormXPM( "icons/xpm/outline/sub_private.xpm" ) );
	IupSetHandle( "IUP_variable_array", XPM.getIUPimageFormXPM( "icons/xpm/outline/variable_array.xpm" ) );
	IupSetHandle( "IUP_variable", XPM.getIUPimageFormXPM( "icons/xpm/outline/variable.xpm" ) );

	version(FBIDE)
	{
		IupSetHandle( "IUP_ctor", XPM.getIUPimageFormXPM( "icons/xpm/outline/ctor.xpm" ) );
		IupSetHandle( "IUP_dtor", XPM.getIUPimageFormXPM( "icons/xpm/outline/dtor.xpm" ) );

		IupSetHandle( "IUP_class", XPM.getIUPimageFormXPM( "icons/xpm/outline/class.xpm" ) );
		IupSetHandle( "IUP_struct", XPM.getIUPimageFormXPM( "icons/xpm/outline/type.xpm" ) );
		
		IupSetHandle( "IUP_property", XPM.getIUPimageFormXPM( "icons/xpm/outline/property.xpm" ) );
		IupSetHandle( "IUP_property_var", XPM.getIUPimageFormXPM( "icons/xpm/outline/property_var.xpm" ) );
		IupSetHandle( "IUP_operator", XPM.getIUPimageFormXPM( "icons/xpm/outline/operator.xpm" ) );
		IupSetHandle( "IUP_variable_protected", XPM.getIUPimageFormXPM( "icons/xpm/outline/variable_protected.xpm" ) );
		IupSetHandle( "IUP_variable_array_protected", XPM.getIUPimageFormXPM( "icons/xpm/outline/variable_array_protected.xpm" ) );
		IupSetHandle( "IUP_variable_array_private", XPM.getIUPimageFormXPM( "icons/xpm/outline/variable_array_private.xpm" ) );
		IupSetHandle( "IUP_variable_private", XPM.getIUPimageFormXPM( "icons/xpm/outline/variable_private.xpm" ) );
		IupSetHandle( "IUP_enummember", XPM.getIUPimageFormXPM( "icons/xpm/outline/enum_member.xpm" ) );
		IupSetHandle( "IUP_enum", XPM.getIUPimageFormXPM( "icons/xpm/outline/enum.xpm" ) );
		IupSetHandle( "IUP_alias", XPM.getIUPimageFormXPM( "icons/xpm/outline/alias.xpm" ) );
		IupSetHandle( "IUP_union", XPM.getIUPimageFormXPM( "icons/xpm/outline/union.xpm" ) );
		IupSetHandle( "IUP_namespace", XPM.getIUPimageFormXPM( "icons/xpm/outline/namespace.xpm" ) );
		IupSetHandle( "IUP_macro", XPM.getIUPimageFormXPM( "icons/xpm/outline/macro.xpm" ) );
		IupSetHandle( "IUP_scope", XPM.getIUPimageFormXPM( "icons/xpm/outline/scope.xpm" ) );
		IupSetHandle( "IUP_define_fun", XPM.getIUPimageFormXPM( "icons/xpm/outline/define_fun.xpm" ) );
		IupSetHandle( "IUP_define_var", XPM.getIUPimageFormXPM( "icons/xpm/outline/define_var.xpm" ) );
		IupSetHandle( "IUP_with", XPM.getIUPimageFormXPM( "icons/xpm/outline/with.xpm" ) );
		IupSetHandle( "IUP_import", XPM.getIUPimageFormXPM( "icons/xpm/outline/import.xpm" ) );
		IupSetHandle( "IUP_version", XPM.getIUPimageFormXPM( "icons/xpm/outline/version.xpm" ) );
		IupSetHandle( "IUP_versionspec", XPM.getIUPimageFormXPM( "icons/xpm/outline/version_spec.xpm" ) );
		
		IupSetHandle( "IUP_funptr_private", XPM.getIUPimageFormXPM( "icons/xpm/outline/funptr_private.xpm" ) );
		IupSetHandle( "IUP_funptr_protected", XPM.getIUPimageFormXPM( "icons/xpm/outline/funptr_protected.xpm" ) );
		IupSetHandle( "IUP_funptr", XPM.getIUPimageFormXPM( "icons/xpm/outline/funptr_public.xpm" ) );		
	}
	version(DIDE)
	{
		IupSetHandle( "IUP_function", XPM.getIUPimageFormXPM( "icons/xpm/outline/fun_public.xpm" ) );
		//IupSetHandle( "IUP_sub", XPM.getIUPimageFormXPM( "icons/xpm/outline/sub_public.xpm" ) );
		IupSetHandle( "IUP_function_protected", XPM.getIUPimageFormXPM( "icons/xpm/outline/fun_protected.xpm" ) );
		IupSetHandle( "IUP_function_private", XPM.getIUPimageFormXPM( "icons/xpm/outline/fun_private.xpm" ) );
		//IupSetHandle( "IUP_sub_protected", XPM.getIUPimageFormXPM( "icons/xpm/outline/sub_protected.xpm" ) );
		//IupSetHandle( "IUP_sub_private", XPM.getIUPimageFormXPM( "icons/xpm/outline/sub_private.xpm" ) );
		IupSetHandle( "IUP_variable_array", XPM.getIUPimageFormXPM( "icons/xpm/outline/variable_array_D.xpm" ) );
		IupSetHandle( "IUP_variable", XPM.getIUPimageFormXPM( "icons/xpm/outline/variable.xpm" ) );

		IupSetHandle( "IUP_debugspec", XPM.getIUPimageFormXPM( "icons/xpm/outline/debug_spec.xpm" ) );
		IupSetHandle( "IUP_debug", XPM.getIUPimageFormXPM( "icons/xpm/outline/debug.xpm" ) );
		IupSetHandle( "IUP_versionspec", XPM.getIUPimageFormXPM( "icons/xpm/outline/version_spec.xpm" ) );
		IupSetHandle( "IUP_version", XPM.getIUPimageFormXPM( "icons/xpm/outline/version.xpm" ) );
		IupSetHandle( "IUP_module", XPM.getIUPimageFormXPM( "icons/xpm/outline/module.xpm" ) );
		IupSetHandle( "IUP_template", XPM.getIUPimageFormXPM( "icons/xpm/outline/template.xpm" ) );
		IupSetHandle( "IUP_ctor", XPM.getIUPimageFormXPM( "icons/xpm/outline/ctor.xpm" ) );
		IupSetHandle( "IUP_dtor", XPM.getIUPimageFormXPM( "icons/xpm/outline/dtor.xpm" ) );
		IupSetHandle( "IUP_class", XPM.getIUPimageFormXPM( "icons/xpm/outline/class.xpm" ) );
		IupSetHandle( "IUP_struct", XPM.getIUPimageFormXPM( "icons/xpm/outline/struct.xpm" ) );
		IupSetHandle( "IUP_property", XPM.getIUPimageFormXPM( "icons/xpm/outline/property.xpm" ) );
		IupSetHandle( "IUP_property_var", XPM.getIUPimageFormXPM( "icons/xpm/outline/property_var.xpm" ) );
		IupSetHandle( "IUP_operator", XPM.getIUPimageFormXPM( "icons/xpm/outline/operator.xpm" ) );
		IupSetHandle( "IUP_variable_protected", XPM.getIUPimageFormXPM( "icons/xpm/outline/variable_protected.xpm" ) );
		IupSetHandle( "IUP_variable_array_protected", XPM.getIUPimageFormXPM( "icons/xpm/outline/variable_array_protected_D.xpm" ) );
		IupSetHandle( "IUP_variable_array_private", XPM.getIUPimageFormXPM( "icons/xpm/outline/variable_array_private_D.xpm" ) );
		IupSetHandle( "IUP_variable_private", XPM.getIUPimageFormXPM( "icons/xpm/outline/variable_private.xpm" ) );
		IupSetHandle( "IUP_enummember", XPM.getIUPimageFormXPM( "icons/xpm/outline/enum_member.xpm" ) );
		IupSetHandle( "IUP_enum", XPM.getIUPimageFormXPM( "icons/xpm/outline/enum.xpm" ) );
		IupSetHandle( "IUP_alias", XPM.getIUPimageFormXPM( "icons/xpm/outline/alias.xpm" ) );
		IupSetHandle( "IUP_union", XPM.getIUPimageFormXPM( "icons/xpm/outline/union.xpm" ) );
		IupSetHandle( "IUP_scope", XPM.getIUPimageFormXPM( "icons/xpm/outline/scope.xpm" ) );
		IupSetHandle( "IUP_import", XPM.getIUPimageFormXPM( "icons/xpm/outline/import.xpm" ) );
		IupSetHandle( "IUP_import_private", XPM.getIUPimageFormXPM( "icons/xpm/outline/import_private.xpm" ) );
		IupSetHandle( "IUP_interface", XPM.getIUPimageFormXPM( "icons/xpm/outline/interface.xpm" ) );
		IupSetHandle( "IUP_anonymous", XPM.getIUPimageFormXPM( "icons/xpm/outline/anonymous.xpm" ) );
		IupSetHandle( "IUP_funptr_private", XPM.getIUPimageFormXPM( "icons/xpm/outline/funptr_private.xpm" ) );
		IupSetHandle( "IUP_funptr_protected", XPM.getIUPimageFormXPM( "icons/xpm/outline/funptr_protected.xpm" ) );
		IupSetHandle( "IUP_funptr", XPM.getIUPimageFormXPM( "icons/xpm/outline/funptr_public.xpm" ) );
	}

	XPM.createIUPimageHandle( "icons/xpm/debug/until.xpm", "icon_debug_until", true );
	XPM.createIUPimageHandle( "icons/xpm/debug/step.xpm", "icon_debug_step", true );
	XPM.createIUPimageHandle( "icons/xpm/debug/bt0.xpm", "icon_debug_bt0", true );
	XPM.createIUPimageHandle( "icons/xpm/debug/bt1.xpm", "icon_debug_bt1", true );
	XPM.createIUPimageHandle( "icons/xpm/debug/stop.xpm", "icon_debug_stop", true );
	XPM.createIUPimageHandle( "icons/xpm/debug/resume.xpm", "icon_debug_resume", true );
	XPM.createIUPimageHandle( "icons/xpm/debug/add.xpm", "icon_debug_add", true );
	XPM.createIUPimageHandle( "icons/xpm/debug/over.xpm", "icon_debug_next", true );
	XPM.createIUPimageHandle( "icons/xpm/debug/left.xpm", "icon_debug_left", true );
	XPM.createIUPimageHandle( "icons/xpm/debug/right.xpm", "icon_debug_right", true );
	XPM.createIUPimageHandle( "icons/xpm/debug/return.xpm", "icon_debug_return", true );
	XPM.createIUPimageHandle( "icons/xpm/debug/clear.xpm", "icon_debug_clear", true );
	XPM.createIUPimageHandle( "icons/xpm/debug/debug.xpm", "icon_debug" );
	XPM.createIUPimageHandle( "icons/xpm/debug/debug_run.xpm", "icon_debugrun" );
	XPM.createIUPimageHandle( "icons/xpm/debug/debug_build.xpm", "icon_debugbuild" );
	XPM.createIUPimageHandle( "icons/xpm/debug/at.xpm", "icon_debug_at" );
	XPM.createIUPimageHandle( "icons/xpm/debug/star.xpm", "icon_debug_star" );
	IupSetHandle( "icon_debug_change", XPM.getIUPimageFormXPM( "icons/xpm/debug/change.xpm" ) );

	IupSetHandle( "icon_poseidonFB", load_image_poseidonFBico() );
	IupSetHandle( "icon_scroll", load_image_scroll() );

	version(Windows)
	{
		IupSetHandle( "warningbox", create_image_warningbox() );
		IupSetHandle( "querybox", create_image_querybox() );
		IupSetHandle( "errorbox", create_image_errorbox() );
		IupSetHandle( "infobox", create_image_infobox() );
		IupSetHandle( "warningbox_invert", create_image_warningbox(true) );
		IupSetHandle( "querybox_invert", create_image_querybox(true) );
		IupSetHandle( "infobox_invert",create_image_infobox(true) );
	}
}